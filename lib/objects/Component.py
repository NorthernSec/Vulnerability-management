#!/usr/bin/env python3.3
# -*- coding: utf-8 -*-
#
# Vulnerability Manager  SystemGroup object
#
# Copyright (c) 2014-2015 	Pieter-Jan Moreels
#
# Software is free software released under the "Original BSD license"

# Imports
import os
import sys
_runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(_runPath, "../.."))

from lib.exceptions import InvalidVariableTypes
from lib.Toolkit import toStringFormattedCPE

# Object
class Component():
  def verifyVars(self, cpe):
    if not (cpe.startswith("cpe:/") or cpe.startswith("cpe:2.3:")): raise(InvalidVariableTypes)

  # init
  def __init__(self, cpe):
    self.verifyVars(cpe)
    self.cpe=toStringFormattedCPE(cpe.strip())
    splits=self.cpe.split(":")
    x = 1 if cpe.startswith("cpe:2.3:") else 0
    self.vendor =splits[2+x].title()
    self.product=splits[3+x].title()
    self.version=splits[4+x].title()if len(splits)>4+x else None
     
  # get/set
  def getDict(self):
    return {"cpe":self.cpe, "vendor": self.vendor, "product": self.product, "version": self.version}
