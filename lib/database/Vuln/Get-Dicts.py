@cursor_wrapped
def getLastTeamVulns(cur, team, limit):
  return cvedb.getVulns(getCPENames(team), limit)

@cursor_wrapped
def getGroups(cur, team, colorVulnerable=False):
  cur.execute("""SELECT * FROM System_Groups WHERE team_id IN (SELECT id FROM Teams WHERE name=%s);""", (team,))
  c = cur.fetchall()
  glist=[]
  for x in c:
    glist.append(getGroupDetails(x).getDict())
  if colorVulnerable:
    for x in glist:
      for comp in x["components"]:
        vuln=cvedb.isVulnerable(comp["cpe"])
        if vuln: x["vulnerable"]=True
        comp["vulnerable"]=vuln
  return sorted(glist, key=lambda s: s["groupName"].lower())

@cursor_wrapped
def getStatistics(cur, team):
  today=date.today()
  start=date(today.year, today.month,1)
  if today.month < 12: end=date(today.year, today.month+1,1)
  else:                end=date(today.year+1, 1, 1)
  systems=[]
  for x in getGroups(team):
    new=0
    closed=0
    oac=0
    tickets=[]
    for cpe in [y["cpe"] for y in x["components"]]:
      tickets.extend([getTicket(cve, cpe, x["groupName"], team) for cve in [x["id"] for x in cvedb.getVulns([cpe], 0)]])
    for ticket in tickets:
      opened=False
      for action in ticket.history:
        aDate=date(action["time"].year, action["time"].month, action["time"].day)
        if "status" in action and aDate >= start and aDate < end:
          if action["status"] == _DEFAULT_STATUS_TEXT:
            new+=1
            opened=True
          elif action["status"].lower().startswith("closed"):
            if opened:
              oac+=1
              new-=1
            else:
              closed+=1
    systems.append({"systems":x["groupName"], "new": new, "closed": closed, "openedAndClosed":oac})
  return systems
