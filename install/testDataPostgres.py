#!/usr/bin/env python3.3
# -*- coding: utf-8 -*-
#
# Database creation script for PostgreSQL database
#
# Copyright (c) 2015 	Pieter-Jan Moreels
#
# Software is free software released under the "Original BSD license"
import sys
try:
  import os
  import sys
  _runPath = os.path.dirname(os.path.realpath(__file__))
  sys.path.append(os.path.join(_runPath, ".."))
  import psycopg2
  from passlib.hash import pbkdf2_sha256
  from lib.Config import Configuration as conf
except Exception as e:
  print(e)
  sys.exit("Dependencies missing! First run the install script.")

import traceback

rounds = conf.getUserEncryptionRounds()
saltLength = conf.getUserSaltLength()

try:
  conn=psycopg2.connect("dbname=vulnmanager user=vulnmanager password=vulnmanager")
  cur = conn.cursor()

  teams=[ ["Team A",      "TestTeam one"],
          ["Team B",      "TestTeam two"],
          ["engineers",   "",           ] ]
  users=[ ["test",       "firstname", "lastname", "test", [["Team A", "reviewer"   ],["Team B", "reviewer"]                        ]],
          ["teamleader", "John",      "Doe",      "test", [["Team A", "teamleader" ],["Team A", "reviewer"], ["Team B", "reviewer"]]],
          ["engineer",   "Foo",       "Bar",      "test", [["-",       "db-engineer"]                                               ]],
          ["management", "Foo",       "Bar",      "test", [["-",       "management" ]                                               ]]]
  systemgroups=[ ["DNS",    "Team A", "Our DNS Servers", ["cpe:2.3:a:libssh:libssh:2.3",
                                                          "cpe:2.3:a:openssl:openssl:1.0.1e",
                                                          "cpe:2.3:a:haxx:curl:7.31.0"             ]],
                 ["Proxy",  "Team A", "",                ["cpe:2.3:a:gnu:gnutls:",
                                                          "cpe:2.3:a:haxx:curl:7.31.0",
                                                          "cpe:2.3:a:openssl:openssl:1.0.1e"       ]],
                 ["Proxy",  "Team B", "",                ["cpe:2.3:a:gnu:gnutls:",
                                                          "cpe:2.3:a:apache:xerces-c%2b%2b",
                                                          "cpe:2.3:a:redhat:richfaces",
                                                          "cpe:2.3:a:openssl:openssl:1.0.1e"       ]],
                 ["Citrix", "engineers", "Some Servers", ["cpe:/o:microsoft:windows_server_2008:",
                                                          "cpe:/a:citrix:netscaler",
                                                          "cpe:/a:mcafee:virusscan_enterprise"     ]]]

  for x in teams:
    cur.execute("""INSERT INTO Teams VALUES(DEFAULT, %s, %s) RETURNING id;""" , (x[0], x[1]))
    conn.commit()
  for x in users:
    pwd=pbkdf2_sha256.encrypt(x[3], rounds=rounds, salt_size=saltLength)
    cur.execute("""INSERT INTO Users VALUES(DEFAULT, %s, %s, %s, %s) RETURNING id""", (x[0], x[1], x[2], pwd))
    uid=cur.fetchone()[0]
    cur.execute("""SELECT id, name FROM Roles""")
    roles={x[1]:x[0] for x in cur.fetchall()}
    for y in x[4]:
      cur.execute("""INSERT INTO Users_in_Team (user_id, team_id, role_id)
                       SELECT %s, id, %s
                         FROM Teams
                         WHERE name = %s;""" , (uid, roles[y[1]], y[0]))
    conn.commit()
  for x in systemgroups:
    cur.execute("""INSERT INTO System_Groups (name, team_id, info)
                     SELECT %s, id, %s
                       FROM Teams
                       WHERE name = %s
                     RETURNING id;""" , (x[0], x[2], x[1]))
    groupID=cur.fetchall()[0][0]
    conn.commit()
    for c in x[3]:
      cur.execute("""with s as (
                       select id, name
                       from Components
                       where name = %s
                     ), i as (
                       insert into Components (name)
                       select %s
                       where not exists (select 1 from s)
                       returning id, name
                     )
                     select id, name from i
                     union all
                     select id, name from s; """,(c, c))
      componentID=cur.fetchall()[0][0]
      try:
        cur.execute("""INSERT INTO Components_in_System_Group VALUES(%s, %s);""",(componentID, groupID))
      except:
        pass


  conn.commit()
except Exception as e:
  print(traceback.format_exc())
